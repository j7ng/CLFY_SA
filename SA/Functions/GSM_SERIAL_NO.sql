CREATE OR REPLACE FUNCTION sa.GSM_SERIAL_NO RETURN VARCHAR2 IS

SERIAL VARCHAR2(30);
LUHN_NO NUMBER;
STR_LUHN VARCHAR(2);

p15 number;
P14 NUMBER;
P13 NUMBER;
P12 NUMBER;
P11 NUMBER;
P10 NUMBER;
P9 NUMBER;
P8 NUMBER;
P7 NUMBER;
P6 NUMBER;
P5 NUMBER;
P4 NUMBER;
P3 NUMBER;
P2 NUMBER;
P1 NUMBER;
FOUND NUMBER:=0;

BEGIN

WHiLE FOUND=0 LOOP

  SELECT GSM_SERIAL_NO_SEQ.NEXTVAL
  INTO SERIAL FROM DUAL;

P1:= SUBSTR(SERIAL,1,1);
P2:= TO_NUMBER(SUBSTR(SERIAL,2,1))*2;
IF P2>= 10 THEN
   P2:=P2-9;
end if;
P3:= SUBSTR(SERIAL,3,1);
P4:= TO_NUMBER(SUBSTR(SERIAL,4,1))*2;
IF P4>= 10 THEN
   P4:=P4-9;
end if;

P5:= SUBSTR(SERIAL,5,1);
P6:= TO_NUMBER(SUBSTR(SERIAL,6,1))*2;
IF P6>= 10 THEN
   P6:=P6-9;
end if;

P7:= SUBSTR(SERIAL,7,1);
P8:= TO_NUMBER(SUBSTR(SERIAL,8,1))*2;
IF P8>= 10 THEN
   P8:=P8-9;
end if;

P9:= SUBSTR(SERIAL,9,1);
P10:= TO_NUMBER(SUBSTR(SERIAL,10,1))*2;
IF P10>= 10 THEN
   P10:=P10-9;
end if;
P11:= SUBSTR(SERIAL,11,1);
P12:= TO_NUMBER(SUBSTR(SERIAL,12,1))*2;
IF P12>= 10 THEN
   P12:=P12-9;
end if;
P13:= SUBSTR(SERIAL,13,1);

P14:= TO_NUMBER(SUBSTR(SERIAL,14,1))*2;
IF P14>= 10 THEN
   P14:=P14-9;
end if;
P15:= TO_NUMBER(SUBSTR(SERIAL,15,1));

LUHN_NO := P1+P2+P3+P4+P5+P6+P7+P8+P9+P10+P11+P12+P13+P14+p15;

IF MOD(LUHN_NO,10) = 0 THEN
   RETURN SERIAL;
END IF;

END LOOP;

END GSM_SERIAL_NO;
/