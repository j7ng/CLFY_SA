CREATE OR REPLACE PACKAGE BODY sa.GET_ESN_INFO_PKG AS

  PROCEDURE SP_IS_ESN_MINC_ALLOWED
    (IP_ESN                 IN VARCHAR2
    , OP_MINC_ALLOWED       OUT VARCHAR2
    , OP_MINC_COUNT         OUT NUMBER
    , OP_ERR_NUM            OUT VARCHAR2
	  , OP_ERR_STRING         OUT VARCHAR2
    )
    AS
    LV_NO_OF_MINC_ALLOWED             sa.TABLE_X_PARAMETERS.X_PARAM_VALUE%TYPE;
    LV_NO_OF_DAYS_FOR_MINC_CHECK      sa.TABLE_X_PARAMETERS.X_PARAM_VALUE%TYPE;
    LV_ESN_EXIST                      PLS_INTEGER;
  BEGIN

    SELECT  P.X_PARAM_VALUE
    INTO    LV_NO_OF_MINC_ALLOWED
    FROM    sa.TABLE_X_PARAMETERS P
    WHERE   P.X_PARAM_NAME IN ('NO_OF_MINC_ALLOWED');

    SELECT  P.X_PARAM_VALUE
    INTO    LV_NO_OF_DAYS_FOR_MINC_CHECK
    FROM    sa.TABLE_X_PARAMETERS P
    WHERE   P.X_PARAM_NAME IN ('NO_OF_DAYS_FOR_MINC_CHECK');

    BEGIN
      SELECT  1
      INTO    LV_ESN_EXIST
      FROM    sa.TABLE_SITE_PART SP
      WHERE   SP.X_SERVICE_ID =IP_ESN
      AND     ROWNUM=1
    ;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        OP_MINC_COUNT := NULL;
        OP_MINC_ALLOWED := 'FALSE';
        OP_ERR_NUM := '1';
        OP_ERR_STRING := 'ESN does not exist in DB. Please provide a valid ESN for minc';
        RETURN;
    END;

    SELECT  COUNT(*)
    INTO    OP_MINC_COUNT
    FROM    sa.TABLE_X_CALL_TRANS CT
    WHERE   1=1
    AND     CT.X_SERVICE_ID =IP_ESN
    AND     CT.X_TRANSACT_DATE >= TRUNC(SYSDATE)-LV_NO_OF_DAYS_FOR_MINC_CHECK
    AND     CT.X_REASON = 'MINCHANGE'
    AND     CT.X_ACTION_TEXT = 'DEACTIVATION';

    IF OP_MINC_COUNT >= LV_NO_OF_MINC_ALLOWED THEN
      OP_MINC_ALLOWED := 'FALSE';
      OP_ERR_NUM := '0';
      OP_ERR_STRING := 'User crossed allowed number of Min changes';
    ELSE
      OP_MINC_ALLOWED := 'TRUE';
      OP_ERR_NUM := '0';
      OP_ERR_STRING := 'Success';
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      OP_ERR_NUM := 2;
      OP_ERR_STRING := 'Failure';
      RAISE;
  END SP_IS_ESN_MINC_ALLOWED;

END GET_ESN_INFO_PKG;
/